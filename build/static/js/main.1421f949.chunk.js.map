{"version":3,"sources":["Components/Navbar/Navbar.tsx","Components/Pages/AboutPage.tsx","Components/Form/index.js","Components/Form/Form.tsx","Components/ItemList/index.js","Components/ItemList/ItemList.tsx","Components/Pages/TodosPage.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Navbar","className","href","to","AboutPage","history","useHistory","onClick","push","Form","onAddTodos","useState","value","setValue","onChange","event","target","onKeyPress","key","type","name","id","htmlFor","ItemList","todos","onCheckTodos","onDeleteTodos","length","map","todo","isCompleted","classes","checked","join","TodosPage","setTodos","useEffect","localTodos","JSON","parse","localStorage","getItem","setItem","stringify","newTodo","Date","now","prev","filter","App","component","path","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1421f949.chunk.js","sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nexport const Navbar: React.FC = () => {\r\n    return (\r\n        <nav>\r\n            <div className=\"nav-wrapper purple darken-2 p-lr-1\">\r\n                <a href=\"/\" className=\"brand-logo\">React + Typescript</a>\r\n                <ul className=\"right hide-on-med-and-down\">\r\n                    <li>\r\n                        <NavLink to=\"/\">Task list</NavLink>\r\n                    </li>\r\n                    <li>\r\n                        <NavLink to=\"/about\">Info</NavLink>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n","import React from 'react'\r\nimport { useHistory } from 'react-router-dom'\r\nexport default function AboutPage() {\r\n    const history = useHistory();\r\n    return (\r\n        <>\r\n            <h1>AboutPage</h1>\r\n            <p>Lorem ipsum dolor sit, amet consectetur adipisicing elit. Aperiam accusamus eius, odit architecto saepe culpa voluptate eveniet ipsa corporis, aliquid ipsam nulla illum cupiditate veritatis ab, suscipit eum praesentium quibusdam.\r\n            Aperiam facilis nulla nesciunt voluptatum laboriosam ipsum cupiditate officia laudantium harum aspernatur officiis vero fuga nihil corrupti quaerat corporis obcaecati amet maxime, voluptatem pariatur ad sed illum placeat. Ullam, neque.\r\n            Qui provident fugiat atque dolore magni illum possimus ut eum explicabo sed rerum est perferendis consectetur autem, ad adipisci eveniet sapiente nulla reiciendis. Eligendi amet, saepe non rem cumque nihil?\r\n            Ex ea laborum optio quaerat quos, veniam porro eum laboriosam exercitationem fuga vitae, earum ducimus amet dolorum quis sed quo aliquid? Natus itaque dolores quo doloremque quasi veritatis pariatur ipsa?</p>\r\n            <button className=\"btn\" onClick={() => history.push('/')}>Return to tasks</button>\r\n        </>\r\n    )\r\n}\r\n","import { Form } from './Form';\r\nexport default Form;","import React, { useState } from 'react'\r\n\r\ninterface FormProps {\r\n    onAddTodos(newTodo: string): void;\r\n}\r\n\r\nexport const Form: React.FC<FormProps> = ({ onAddTodos }) => {\r\n    const [value, setValue] = useState<string>('')\r\n\r\n    const onValueChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        setValue(event.target.value)\r\n    }\r\n\r\n    const submitInputValue = (event: React.KeyboardEvent) => {\r\n        if (event.key === 'Enter') {\r\n            onAddTodos(value);\r\n            setValue('');\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"input-field m-t-2\">\r\n            <input\r\n                onChange={onValueChange}\r\n                onKeyPress={submitInputValue}\r\n                value={value}\r\n                type=\"text\"\r\n                name=\"\"\r\n                id=\"title\" />\r\n            <label htmlFor=\"title\" className=\"active\">\r\n                Insert the task name\r\n            </label>\r\n        </div>\r\n    )\r\n}","import { ItemList } from './ItemList';\r\nexport default ItemList;","import React from 'react'\r\nimport { ITodo } from '../Interfaces'\r\n\r\ninterface ItemListProps {\r\n    todos: Array<ITodo>,\r\n    onCheckTodos(id: number): void,\r\n    onDeleteTodos(id: number): void\r\n}\r\n\r\nexport const ItemList: React.FC<ItemListProps> = ({ todos, onCheckTodos,\r\n    onDeleteTodos }) => {\r\n    if (!todos.length) {\r\n        return <p className=\"center fz-1-2\">There are no tasks yet!</p>\r\n    }\r\n    return (\r\n        <ul>\r\n            {todos.map(todo => {\r\n                const { value, id, isCompleted } = todo;\r\n                const classes = ['todo-value', 'fz-1-2'];\r\n                if (isCompleted) {\r\n                    classes.push('completed');\r\n                }\r\n\r\n                return (<li className=\"todo\" key={`${id}`}>\r\n                    <label\r\n                        htmlFor={`${id}`}\r\n                        className=\"p-lr-1\"\r\n                    >\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            name=\"\"\r\n                            id={`${id}`}\r\n                            checked={isCompleted}\r\n                            onChange={() => onCheckTodos(id)}\r\n                        />\r\n                        <span className={classes.join(' ')}>{value}</span>\r\n                        <i\r\n                            className=\"material-icons red-text pointer p-l-1\"\r\n                            onClick={() => onDeleteTodos(id)}\r\n                        >delete</i>\r\n                    </label>\r\n                </li>)\r\n            }\r\n            )}\r\n        </ul>\r\n    )\r\n}\r\n","import React, { useState, useEffect } from 'react'\r\nimport Form from '../Form'\r\nimport ItemList from '../ItemList'\r\nimport { ITodo } from '../Interfaces';\r\n\r\nexport default function TodosPage() {\r\n    const [todos, setTodos] = useState<Array<ITodo>>(\r\n        [\r\n            {\r\n                value: 'Task 1',\r\n                id: 12,\r\n                isCompleted: true\r\n            }\r\n        ]\r\n    );\r\n\r\n    useEffect(() => {\r\n        const localTodos: Array<ITodo> = JSON.parse(localStorage.getItem('todos') || '[]')\r\n        setTodos(localTodos);\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem('todos', JSON.stringify(todos))\r\n    }, [todos])\r\n\r\n    const onAddTodos = (value: string) => {\r\n        const newTodo: ITodo = {\r\n            value,\r\n            id: Date.now(),\r\n            isCompleted: false\r\n        }\r\n        setTodos(prev => [newTodo, ...prev])\r\n    }\r\n\r\n    const onCheckTodos = (id: number) => {\r\n        setTodos(prev => prev.map(todo =>\r\n            todo.id === id ? { ...todo, isCompleted: !todo.isCompleted } : todo\r\n        )\r\n        );\r\n    }\r\n\r\n    const onDeleteTodos = (id: number) => {\r\n        setTodos(prev => prev.filter(todo => todo.id !== id));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Form onAddTodos={onAddTodos} />\r\n            <ItemList\r\n                todos={todos}\r\n                onCheckTodos={onCheckTodos}\r\n                onDeleteTodos={onDeleteTodos}\r\n            />\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport { BrowserRouter, Route } from 'react-router-dom'\nimport './App.css';\nimport { Navbar } from './Components/Navbar/Navbar';\nimport AboutPage from './Components/Pages/AboutPage';\nimport TodosPage from './Components/Pages/TodosPage';\n\nconst App: React.FC = () => {\n  return (\n    <BrowserRouter>\n      <Navbar />\n      <div className=\"container\">\n        <Route component={TodosPage} path=\"/\" exact />\n        <Route component={AboutPage} path=\"/about\" />\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}